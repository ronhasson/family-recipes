rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }
    match /users/{userid}{
    	allow read: if request.auth != null;
    	allow read, write: if userid == request.auth.uid;
      allow read, write: if request.auth.token.admin == true;
      
      match /invites/{invite}{
      	allow create: if request.auth != null;
        allow read, delete: if userid == request.auth.uid;
      }
    }
    match /recipes/{recipe}{
    	allow create: if request.auth != null; //temp
      allow read: if resource.data.isPublic == true;
      allow read, write: if resource.data.owner == request.auth.uid;
      allow read, write: if request.auth.token.admin == true;
    }
    match /groups/{group}{
    	allow create: if request.auth != null; //temp
      allow read: if resource.data.members.hasAny([request.auth.uid]);
      allow read, write: if resource.data.owner == request.auth.uid;
      allow read, write: if request.auth.token.admin == true;
      allow write: if request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid)/invites/$(group))

    }
  }
}